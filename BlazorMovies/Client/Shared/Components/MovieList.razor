@inject IJSRuntime JS

<GenericList List="Movies">

    <ChildContent>
        <div class="row">
            <div class="col-md-4">
                <div class="checkbox">
                    <label>
                        <input type="checkbox" @bind="@isAdmin" />IS Admin?
                    </label>
                </div>
            </div>
        </div>
    </ChildContent>
       
    <ElementTemplate Context="movie">
        <MovieItem Movie="movie" IsAdmin="isAdmin" DeleteMovie="DeleteMovie" />
    </ElementTemplate>
</GenericList>

<ConfirmationModal @ref="confirmationModal">
    <div>Do you want to delete this item?</div>
</ConfirmationModal>

@code {

    [Parameter] public IList<Movie> Movies { get; set; } // = new List<Movie>();
    [Parameter] public RenderFragment NullTemplate { get; set; }
    [Parameter] public RenderFragment EmptyTemplate { get; set; }

    bool isAdmin = false;

    ConfirmationModal confirmationModal;

    async Task DeleteMovie(Movie movie)
    {
        confirmationModal.Show();

        // Delete movie confirmation
        @*var confirmed = await JS.Confirm($"Do you really want to delete the movie: { movie.Title }");

        if(confirmed == false)
        {
            await JS.Alert("Better safe than sorry...");

            return;
        }

        await Task.Delay(5000);
        Movies.Remove(movie);
        await JS.Alert("Yay! Movie deleted successfully...");
        Console.WriteLine($"{ movie } deleted!!!");*@
    }

    protected async override Task OnInitializedAsync()
    {
        await Task.Delay(5000);
        //Movies = GetMovies();
    }

}
